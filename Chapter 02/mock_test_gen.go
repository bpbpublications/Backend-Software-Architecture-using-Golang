// Code generated by MockGen. DO NOT EDIT.
// Source: mock_service.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyService is a mock of MyService interface.
type MockMyService struct {
	ctrl     *gomock.Controller
	recorder *MockMyServiceMockRecorder
}

// MockMyServiceMockRecorder is the mock recorder for MockMyService.
type MockMyServiceMockRecorder struct {
	mock *MockMyService
}

// NewMockMyService creates a new mock instance.
func NewMockMyService(ctrl *gomock.Controller) *MockMyService {
	mock := &MockMyService{ctrl: ctrl}
	mock.recorder = &MockMyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyService) EXPECT() *MockMyServiceMockRecorder {
	return m.recorder
}

// DoSomething mocks base method.
func (m *MockMyService) DoSomething() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoSomething indicates an expected call of DoSomething.
func (mr *MockMyServiceMockRecorder) DoSomething() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockMyService)(nil).DoSomething))
}
